{
  "db_name": "PostgreSQL",
  "query": "select\n    pq.id as \"id!\",\n    s.index as \"index!\",\n    pq.submitter as \"submitter!\",\n    pq.timestamp as \"timestamp!\",\n    s.body as \"body!\",\n    s.speaker as \"speaker!\",\n    hidden.reason as \"hidden_reason: Option<String>\",\n    hidden.actor as \"hidden_actor: Option<String>\",\n    v.vote as \"vote: Option<Vote>\",\n    (case when pq.score is null then 0 else pq.score end) as \"score!\",\n    (case when f.username is null then false else true end) as \"favorited!\"\nfrom\n    (\n        select *\n        from\n            (\n                select\n                    id,\n                    submitter,\n                    timestamp,\n                    (case when quote_id is not null then true else false end) as hidden\n                from quotes as _q\n                left join (select quote_id from hidden) _h on _q.id = _h.quote_id\n            ) as q\n        left join\n            (\n                select\n                    quote_id,\n                    sum(\n                        case\n                            when vote = 'upvote'\n                            then 1\n                            when vote = 'downvote'\n                            then -1\n                            else 0\n                        end\n                    ) as score\n                from votes\n                group by quote_id\n            ) as t\n            on t.quote_id = q.id\n        where\n            case\n                when $7 and $6 and $9\n                then q.hidden\n                when $7 and $6\n                then\n                    case\n                        when\n                            (\n                                q.submitter = $8\n                                or $8\n                                in (select speaker from shards where quote_id = q.id)\n                            )\n                        then q.hidden\n                        else false\n                    end\n                when $7 and not $6\n                then not q.hidden\n                else\n                    (\n                        case\n                            when\n                                q.hidden\n                                and (\n                                    q.submitter = $8\n                                    or $8 in (\n                                        select speaker from shards where quote_id = q.id\n                                    )\n                                )\n                            then q.hidden\n                            else not q.hidden\n                        end\n                    )\n            end\n            and case when $2::int4 > 0 then q.id < $2::int4 else true end\n            and submitter like $5\n            and (\n                submitter like $10\n                or q.id in (select quote_id from shards s where speaker like $10)\n            )\n            and q.id\n            in (select quote_id from shards where body ilike $3 and speaker like $4)\n            and case\n                when $11\n                then q.id in (select quote_id from favorites where username = $8)\n                else true\n            end\n        order by\n            (\n                case\n                    when $12::bool and $13::bool\n                    then score\n                    when $12::bool and not $13::bool\n                    then -1 * score\n                    when not $12::bool and $13::bool\n                    then extract(epoch from timestamp)\n                    when not $12::bool and not $13::bool\n                    then -1 * extract(epoch from timestamp)\n                end\n            ),\n            q.id desc\n        limit $1\n    ) as pq\nleft join hidden on hidden.quote_id = pq.id\nleft join shards s on s.quote_id = pq.id\nleft join\n    (select quote_id, vote from votes where submitter = $8) v on v.quote_id = pq.id\nleft join\n    (select quote_id, username from favorites where username = $8) f\n    on f.quote_id = pq.id\norder by\n    (\n        case\n            when $12::bool and $13::bool\n            then score\n            when $12::bool and not $13::bool\n            then -1 * score\n            when not $12::bool and $13::bool\n            then extract(epoch from timestamp)\n            when not $12::bool and not $13::bool\n            then -1 * extract(epoch from timestamp)\n        end\n    ),\n    s.index\n",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "id!",
        "type_info": "Int4"
      },
      {
        "ordinal": 1,
        "name": "index!",
        "type_info": "Int2"
      },
      {
        "ordinal": 2,
        "name": "submitter!",
        "type_info": "Varchar"
      },
      {
        "ordinal": 3,
        "name": "timestamp!",
        "type_info": "Timestamp"
      },
      {
        "ordinal": 4,
        "name": "body!",
        "type_info": "Text"
      },
      {
        "ordinal": 5,
        "name": "speaker!",
        "type_info": "Varchar"
      },
      {
        "ordinal": 6,
        "name": "hidden_reason: Option<String>",
        "type_info": "Text"
      },
      {
        "ordinal": 7,
        "name": "hidden_actor: Option<String>",
        "type_info": "Varchar"
      },
      {
        "ordinal": 8,
        "name": "vote: Option<Vote>",
        "type_info": {
          "Custom": {
            "name": "vote",
            "kind": {
              "Enum": [
                "upvote",
                "downvote"
              ]
            }
          }
        }
      },
      {
        "ordinal": 9,
        "name": "score!",
        "type_info": "Int8"
      },
      {
        "ordinal": 10,
        "name": "favorited!",
        "type_info": "Bool"
      }
    ],
    "parameters": {
      "Left": [
        "Int8",
        "Int4",
        "Text",
        "Text",
        "Text",
        "Bool",
        "Bool",
        "Text",
        "Bool",
        "Text",
        "Bool",
        "Bool",
        "Bool"
      ]
    },
    "nullable": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      null,
      null
    ]
  },
  "hash": "134deb891b4e6eeec1bd291444b11a1608b8ddc4bd6297cc322cab7697458b54"
}
